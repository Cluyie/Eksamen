@using System.Collections.Generic
@using System.Diagnostics.Contracts
@using System.Linq
@using AdminPanel.Client.DTOs
@using AdminPanel.Client.Models

<section class="discussions">
    <TicketHeader GetNextCustomer="GetNextCustomer" QueueCount=QueueCount />
    @if (TicketDTOs != null && TicketDTOs.Count != 0)
    {
        @foreach (TicketDTO ticketDTO in (TicketDTOs ?? new List<TicketDTO>()))
        {
            @if (ticketDTO?.Ticket?.Messages != null && ticketDTO?.Ticket?.Messages?.Count != 0)
            {
                <div @onclick="@(() => UpdateTicket.InvokeAsync(ticketDTO))">
                    <TicketComponent Name=@ticketDTO?.Ticket?.Name
                                    Active=@(ticketDTO?.Ticket?.Active ?? false)
                                    New=@(ticketDTO?.Ticket.Messages?.Any(x => x?.Seen == false) ?? false)
                                    Message=@ticketDTO?.Ticket?.Messages?.First()?.Text
                                    TimeStamp=@ticketDTO?.Ticket?.Messages?.First()?.TimeStamp.ToString() />
                </div>
            }
        }
    }
</section>

@code
{
    [Parameter] public List<TicketDTO> TicketDTOs { get; set; }
    [Parameter] public int QueueCount { get; set; }
    [Parameter] public EventCallback<TicketDTO> UpdateTicket { get; set; }
    [Parameter] public EventCallback GetNextCustomer { get; set; }
}

<style>
    .discussions {
        width: 35%;
        max-height: 100vh;
        box-shadow: 0px 8px 10px rgba(0,0,0,0.20);
        overflow-y: auto;
        display: inline-block;
    }
</style>