@layout CleanLayout
@page "/Chat"
@attribute [Authorize]
@using System
@using System.Collections.Generic
@using AdminPanel.Client.Components.CustomerService
@using AdminPanel.Client.Models
@using System.Linq
@using System.Threading.Tasks
@using AdminPanel.Client.DTOs
@using AdminPanel.Client.Services
@using Microsoft.AspNetCore.SignalR.Client
@using UCLDreamTeam.SharedInterfaces
@inject ITicketService TicketService
@inject IReservationService ReservationService
@inject IResourceService ResourceService
@inject IAuthService LanchService
@*Todo: Reamake Ticekt Panel*@
<div class="container-fluid">
    <div class="row h-100">
        <section class="discussion">
            <TicketHeader GetNextCustomer="GetNextInQue" QueueCount="QueueCount"></TicketHeader>
            @foreach (Ticket ticket in TicketDTOs)
            {
                <div class="border border-secondary">
                    <Selector ReturnValue="ticket" Action="x => ActiveTicketDTO.Ticket = x as Ticket">
                        <div class="d-flex">
                            <div class="discussion @(ticket.Status == Status.Active ? "message-active" : "")">
                                <div class="desc-contact">
                                    <p class="name">@ticket.Name</p>
                                    <p class="message">@ticket.Messages</p>
                                </div>
                            </div>
                            @if (ticket.Status == Status.Active)
                            {
                                <div class="active-bar"></div>
                            }
                        </div>
                    </Selector>
                </div>
            }
        </section>
        <style>
            .discussions {
                width: 35%;
                max-height: 100vh;
                box-shadow: 0px 8px 10px rgba(0,0,0,0.20);
                overflow-y: auto;
                display: inline-block;
            }
        </style>
    </div>
</div>

@code
{
    private HubConnection SuportHubConection;
    public List<Ticket> TicketDTOs { get; set; } = new List<Ticket>();
    public TicketDTO ActiveTicketDTO { get; set; }
    public int QueueCount { get; set; }

    protected override async Task OnInitializedAsync()
    {
        TicketDTOs = await TicketService.GetByUserIdAsync((await LanchService.GetCurrentUser()).Id);

    }
    private void GetNextInQue()
    {
        TicketDTOs.Add(new Ticket() { Description = "Dette er en tset", Id = Guid.NewGuid(), Messages = new List<Message>(), Name = "Test", Status = Status.Active, ResourceId = Guid.Empty });
        Console.WriteLine(TicketDTOs.Count);
    }
}